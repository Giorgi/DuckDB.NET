<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <Description>DuckDB Bindings for C#.</Description>
    <PackageReleaseNotes>
	  Added support for binding nested List and Array values

Added support for binding List with null values

Added support for inserting TIMESTAMP_MS, TIMESTAMP_NS and TIMESTAMP_S

Updated to DuckDB v1.2.1
    </PackageReleaseNotes>
    <RootNamespace>DuckDB.NET.Native</RootNamespace>
    <RuntimeIdentifiers>win-x64;win-arm64;linux-x64;linux-arm64;osx</RuntimeIdentifiers>
    <DuckDbArtifactRoot Condition=" '$(DuckDbArtifactRoot)' == '' ">https://github.com/duckdb/duckdb/releases/download/v1.2.1</DuckDbArtifactRoot>
    <SignAssembly>True</SignAssembly>
    <AssemblyOriginatorKeyFile>..\keyPair.snk</AssemblyOriginatorKeyFile>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <Nullable>enable</Nullable>
  </PropertyGroup>

  <PropertyGroup Condition="'$(BuildType)' == 'ManagedOnly' ">
    <Description>$(Description) $(NoNativeText)</Description>
  </PropertyGroup>
  
  <!-- Download and include the native libraries into the NuGet package-->
  <Target Name="DownloadNativeLibs" BeforeTargets="GenerateAdditionalSources" Condition="'$(BuildType)' == 'Full' ">
    <MSBuild Projects="DownloadNativeLibs.targets" Properties="Rid=win-x64;LibUrl=$(DuckDbArtifactRoot)/libduckdb-windows-amd64.zip" />
    <MSBuild Condition="'$(SkipArm)' == ''" Projects="DownloadNativeLibs.targets" Properties="Rid=win-arm64;LibUrl=$(DuckDbArtifactRoot)/libduckdb-windows-arm64.zip" />
    <MSBuild Projects="DownloadNativeLibs.targets" Properties="Rid=linux-x64;LibUrl=$(DuckDbArtifactRoot)/libduckdb-linux-amd64.zip" />
    <MSBuild Condition="'$(SkipArm)' == ''" Projects="DownloadNativeLibs.targets" Properties="Rid=linux-arm64;LibUrl=$(DuckDbArtifactRoot)/libduckdb-linux-aarch64.zip" />
    <MSBuild Projects="DownloadNativeLibs.targets" Properties="Rid=osx;LibUrl=$(DuckDbArtifactRoot)/libduckdb-osx-universal.zip" />
  </Target>
  <Target Name="CleanNativeLibs" BeforeTargets="Clean" Condition="'$(BuildType)' == 'Full' ">
    <RemoveDir Directories="obj\runtimes" />
  </Target>
  <ItemGroup Condition="'$(BuildType)' == 'Full' ">
    <None Include="obj\runtimes\**\*.dll;obj\runtimes\**\*.so;obj\runtimes\**\*.dylib;">
      <Visible>false</Visible>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Pack>true</Pack>
      <PackagePath>\runtimes</PackagePath>
      <Link>runtimes\%(RecursiveDir)\%(FileName)%(Extension)</Link>
    </None>
  </ItemGroup>
  <ItemGroup Condition="'$(CI)' == 'true'">
    <PackageReference Include="GitVersion.MsBuild" Version="5.11.1" PrivateAssets="all" />
  </ItemGroup>
  <ItemGroup Condition="'$(TargetFramework)' == 'netstandard2.0'">
    <PackageReference Include="System.Runtime.CompilerServices.Unsafe" Version="6.1.0" />
  </ItemGroup>
  <!-- End native lib section -->
</Project>
